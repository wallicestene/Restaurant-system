"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const update_record_plugin_1 = __importDefault(require("./actions/update-record/update-record-plugin"));
const webhook_plugin_1 = __importDefault(require("./actions/webhook/webhook-plugin"));
const optionsToFeatureMapping = {
    webhookCustomActions: webhook_plugin_1.default.FEATURE,
    updateRecordCustomActions: update_record_plugin_1.default.FEATURE,
};
const featuresFormattedWithVersion = [
    { feature: webhook_plugin_1.default.FEATURE, version: webhook_plugin_1.default.VERSION },
    { feature: update_record_plugin_1.default.FEATURE, version: update_record_plugin_1.default.VERSION },
];
class CustomizationPluginService {
    constructor(agentOptions) {
        this.addCustomizations = async (datasourceCustomizer, _) => {
            const { experimental } = this.options;
            if (!experimental)
                return;
            const modelCustomizations = await this.client.modelCustomizationService.getConfiguration();
            CustomizationPluginService.makeAddCustomizations(experimental)(datasourceCustomizer, _, modelCustomizations);
        };
        this.client = agentOptions.forestAdminClient;
        this.options = agentOptions;
    }
    buildFeatures() {
        return CustomizationPluginService.buildFeatures(this.options?.experimental);
    }
    static buildFeatures(experimental) {
        const features = CustomizationPluginService.getFeatures(experimental);
        const enabledFeaturesFormattedWithVersion = featuresFormattedWithVersion
            .filter(({ feature }) => features?.includes(feature))
            .reduce((acc, { feature, version }) => ({
            ...acc,
            [feature]: version,
        }), {});
        return Object.keys(enabledFeaturesFormattedWithVersion).length
            ? enabledFeaturesFormattedWithVersion
            : null;
    }
    static getFeatures(experimental) {
        return Object.entries(optionsToFeatureMapping)
            .filter(([experimentalFeature]) => experimental?.[experimentalFeature])
            .map(([, feature]) => feature);
    }
}
exports.default = CustomizationPluginService;
CustomizationPluginService.makeAddCustomizations = (experimental) => {
    return (datasourceCustomizer, _, modelCustomizations) => {
        if (experimental.webhookCustomActions) {
            webhook_plugin_1.default.addWebhookActions(datasourceCustomizer, _, modelCustomizations);
        }
        if (experimental.updateRecordCustomActions) {
            update_record_plugin_1.default.addUpdateRecordActions(datasourceCustomizer, _, modelCustomizations);
        }
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9taXphdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zZXJ2aWNlcy9tb2RlbC1jdXN0b21pemF0aW9ucy9jdXN0b21pemF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBR0Esd0dBQXFGO0FBQ3JGLHNGQUFvRTtBQUtwRSxNQUFNLHVCQUF1QixHQUE4QztJQUN6RSxvQkFBb0IsRUFBRSx3QkFBb0IsQ0FBQyxPQUFPO0lBQ2xELHlCQUF5QixFQUFFLDhCQUF5QixDQUFDLE9BQU87Q0FDN0QsQ0FBQztBQUVGLE1BQU0sNEJBQTRCLEdBQUc7SUFDbkMsRUFBRSxPQUFPLEVBQUUsd0JBQW9CLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSx3QkFBb0IsQ0FBQyxPQUFPLEVBQUU7SUFDaEYsRUFBRSxPQUFPLEVBQUUsOEJBQXlCLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSw4QkFBeUIsQ0FBQyxPQUFPLEVBQUU7Q0FDM0YsQ0FBQztBQUVGLE1BQXFCLDBCQUEwQjtJQUs3QyxZQUFtQixZQUFzQztRQU1sRCxzQkFBaUIsR0FBaUIsS0FBSyxFQUFFLG9CQUFvQixFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3pFLE1BQU0sRUFBRSxZQUFZLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ3RDLElBQUksQ0FBQyxZQUFZO2dCQUFFLE9BQU87WUFFMUIsTUFBTSxtQkFBbUIsR0FBRyxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMseUJBQXlCLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztZQUUzRiwwQkFBMEIsQ0FBQyxxQkFBcUIsQ0FBQyxZQUFZLENBQUMsQ0FDNUQsb0JBQW9CLEVBQ3BCLENBQUMsRUFDRCxtQkFBbUIsQ0FDcEIsQ0FBQztRQUNKLENBQUMsQ0FBQztRQWhCQSxJQUFJLENBQUMsTUFBTSxHQUFHLFlBQVksQ0FBQyxpQkFBaUIsQ0FBQztRQUU3QyxJQUFJLENBQUMsT0FBTyxHQUFHLFlBQVksQ0FBQztJQUM5QixDQUFDO0lBaUNNLGFBQWE7UUFDbEIsT0FBTywwQkFBMEIsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxZQUFZLENBQUMsQ0FBQztJQUM5RSxDQUFDO0lBRU0sTUFBTSxDQUFDLGFBQWEsQ0FBQyxZQUFpQztRQUMzRCxNQUFNLFFBQVEsR0FBRywwQkFBMEIsQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUM7UUFFdEUsTUFBTSxtQ0FBbUMsR0FBRyw0QkFBNEI7YUFDckUsTUFBTSxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQzthQUNwRCxNQUFNLENBQ0wsQ0FBQyxHQUFHLEVBQUUsRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDOUIsR0FBRyxHQUFHO1lBQ04sQ0FBQyxPQUFPLENBQUMsRUFBRSxPQUFPO1NBQ25CLENBQUMsRUFDRixFQUFFLENBQ0gsQ0FBQztRQUVKLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxtQ0FBbUMsQ0FBQyxDQUFDLE1BQU07WUFDNUQsQ0FBQyxDQUFDLG1DQUFtQztZQUNyQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ1gsQ0FBQztJQUVPLE1BQU0sQ0FBQyxXQUFXLENBQUMsWUFBaUM7UUFDMUQsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLHVCQUF1QixDQUFDO2FBQzNDLE1BQU0sQ0FBQyxDQUFDLENBQUMsbUJBQW1CLENBQUMsRUFBRSxFQUFFLENBQUMsWUFBWSxFQUFFLENBQUMsbUJBQW1CLENBQUMsQ0FBQzthQUN0RSxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ25DLENBQUM7O0FBcEVILDZDQXFFQztBQTdDZSxnREFBcUIsR0FFQyxDQUFDLFlBQWlDLEVBQUUsRUFBRTtJQUN4RSxPQUFPLENBQUMsb0JBQW9CLEVBQUUsQ0FBQyxFQUFFLG1CQUFtQixFQUFFLEVBQUU7UUFDdEQsSUFBSSxZQUFZLENBQUMsb0JBQW9CLEVBQUU7WUFDckMsd0JBQW9CLENBQUMsaUJBQWlCLENBQUMsb0JBQW9CLEVBQUUsQ0FBQyxFQUFFLG1CQUFtQixDQUFDLENBQUM7U0FDdEY7UUFFRCxJQUFJLFlBQVksQ0FBQyx5QkFBeUIsRUFBRTtZQUMxQyw4QkFBeUIsQ0FBQyxzQkFBc0IsQ0FDOUMsb0JBQW9CLEVBQ3BCLENBQUMsRUFDRCxtQkFBbUIsQ0FDcEIsQ0FBQztTQUNIO0lBQ0gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIn0=