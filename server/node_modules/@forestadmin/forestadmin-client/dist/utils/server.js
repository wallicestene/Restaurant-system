"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const superagent_1 = __importDefault(require("superagent"));
class ServerUtils {
    /** Query Forest-Admin server */
    static async query(options, method, path, headers = {}, body, maxTimeAllowed = 10000) {
        try {
            const url = new URL(path, options.forestServerUrl).toString();
            const request = superagent_1.default[method](url).timeout(maxTimeAllowed);
            request.set('forest-secret-key', options.envSecret);
            if (headers)
                request.set(headers);
            const response = await request.send(body);
            return response.body;
        }
        catch (error) {
            if (error.timeout) {
                throw new Error('The request to ForestAdmin server has timeout');
            }
            this.handleResponseError(error);
        }
    }
    static handleResponseError(e) {
        if (/certificate/i.test(e.message))
            throw new Error('ForestAdmin server TLS certificate cannot be verified. ' +
                'Please check that your system time is set properly.');
        if (e.response) {
            const status = e?.response?.status;
            const message = e?.response?.body?.errors?.[0]?.detail;
            // 0 == offline, 502 == bad gateway from proxy
            if (status === 0 || status === 502)
                throw new Error('Failed to reach ForestAdmin server. Are you online?');
            if (status === 404)
                throw new Error('ForestAdmin server failed to find the project related to the envSecret you configured.' +
                    ' Can you check that you copied it properly in the Forest initialization?');
            if (status === 503)
                throw new Error('Forest is in maintenance for a few minutes. We are upgrading your experience in ' +
                    'the forest. We just need a few more minutes to get it right.');
            // If the server has something to say about the error, we display it.
            if (message)
                throw new Error(message);
            throw new Error('An unexpected error occurred while contacting the ForestAdmin server. ' +
                'Please contact support@forestadmin.com for further investigations.');
        }
        throw e;
    }
}
exports.default = ServerUtils;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWxzL3NlcnZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLDREQUF1RDtBQU12RCxNQUFxQixXQUFXO0lBQzlCLGdDQUFnQztJQUNoQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FDaEIsT0FBb0IsRUFDcEIsTUFBeUMsRUFDekMsSUFBWSxFQUNaLFVBQWtDLEVBQUUsRUFDcEMsSUFBc0IsRUFDdEIsY0FBYyxHQUFHLEtBQUs7UUFFdEIsSUFBSTtZQUNGLE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7WUFFOUQsTUFBTSxPQUFPLEdBQUcsb0JBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUM7WUFFaEUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRSxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDcEQsSUFBSSxPQUFPO2dCQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7WUFFbEMsTUFBTSxRQUFRLEdBQUcsTUFBTSxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBRTFDLE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQztTQUN0QjtRQUFDLE9BQU8sS0FBSyxFQUFFO1lBQ2QsSUFBSSxLQUFLLENBQUMsT0FBTyxFQUFFO2dCQUNqQixNQUFNLElBQUksS0FBSyxDQUFDLCtDQUErQyxDQUFDLENBQUM7YUFDbEU7WUFFRCxJQUFJLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDakM7SUFDSCxDQUFDO0lBRU8sTUFBTSxDQUFDLG1CQUFtQixDQUFDLENBQVE7UUFDekMsSUFBSSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7WUFDaEMsTUFBTSxJQUFJLEtBQUssQ0FDYix5REFBeUQ7Z0JBQ3ZELHFEQUFxRCxDQUN4RCxDQUFDO1FBRUosSUFBSyxDQUFtQixDQUFDLFFBQVEsRUFBRTtZQUNqQyxNQUFNLE1BQU0sR0FBSSxDQUFtQixFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUM7WUFDdEQsTUFBTSxPQUFPLEdBQUksQ0FBbUIsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQztZQUUxRSw4Q0FBOEM7WUFDOUMsSUFBSSxNQUFNLEtBQUssQ0FBQyxJQUFJLE1BQU0sS0FBSyxHQUFHO2dCQUNoQyxNQUFNLElBQUksS0FBSyxDQUFDLHFEQUFxRCxDQUFDLENBQUM7WUFFekUsSUFBSSxNQUFNLEtBQUssR0FBRztnQkFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYix3RkFBd0Y7b0JBQ3RGLDBFQUEwRSxDQUM3RSxDQUFDO1lBRUosSUFBSSxNQUFNLEtBQUssR0FBRztnQkFDaEIsTUFBTSxJQUFJLEtBQUssQ0FDYixrRkFBa0Y7b0JBQ2hGLDhEQUE4RCxDQUNqRSxDQUFDO1lBRUoscUVBQXFFO1lBQ3JFLElBQUksT0FBTztnQkFBRSxNQUFNLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBRXRDLE1BQU0sSUFBSSxLQUFLLENBQ2Isd0VBQXdFO2dCQUN0RSxvRUFBb0UsQ0FDdkUsQ0FBQztTQUNIO1FBRUQsTUFBTSxDQUFDLENBQUM7SUFDVixDQUFDO0NBQ0Y7QUFwRUQsOEJBb0VDIn0=