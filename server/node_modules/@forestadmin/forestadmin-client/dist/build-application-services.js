"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const auth_1 = __importDefault(require("./auth"));
const chart_handler_1 = __importDefault(require("./charts/chart-handler"));
const events_subscription_1 = __importDefault(require("./events-subscription"));
const native_refresh_events_handler_service_1 = __importDefault(require("./events-subscription/native-refresh-events-handler-service"));
const ip_whitelist_1 = __importDefault(require("./ip-whitelist"));
const model_customization_from_api_1 = __importDefault(require("./model-customizations/model-customization-from-api"));
const action_permission_1 = __importDefault(require("./permissions/action-permission"));
const permission_with_cache_1 = __importDefault(require("./permissions/permission-with-cache"));
const rendering_permission_1 = __importDefault(require("./permissions/rendering-permission"));
const user_permission_1 = __importDefault(require("./permissions/user-permission"));
const schema_1 = __importDefault(require("./schema"));
const context_variables_instantiator_1 = __importDefault(require("./utils/context-variables-instantiator"));
const default_logger_1 = __importDefault(require("./utils/default-logger"));
function buildApplicationServices(forestAdminServerInterface, options) {
    const optionsWithDefaults = {
        forestServerUrl: 'https://api.forestadmin.com',
        permissionsCacheDurationInSeconds: 15 * 60,
        logger: default_logger_1.default,
        instantCacheRefresh: true,
        ...options,
    };
    const usersPermission = new user_permission_1.default(optionsWithDefaults, forestAdminServerInterface);
    const renderingPermission = new rendering_permission_1.default(optionsWithDefaults, usersPermission, forestAdminServerInterface);
    const actionPermission = new action_permission_1.default(optionsWithDefaults, forestAdminServerInterface);
    const contextVariables = new context_variables_instantiator_1.default(renderingPermission);
    const permission = new permission_with_cache_1.default(actionPermission, renderingPermission);
    const eventsHandler = new native_refresh_events_handler_service_1.default(actionPermission, usersPermission, renderingPermission);
    const eventsSubscription = new events_subscription_1.default(optionsWithDefaults, eventsHandler);
    return {
        renderingPermission,
        optionsWithDefaults,
        permission,
        contextVariables,
        eventsSubscription,
        eventsHandler,
        chartHandler: new chart_handler_1.default(contextVariables),
        ipWhitelist: new ip_whitelist_1.default(optionsWithDefaults),
        schema: new schema_1.default(optionsWithDefaults),
        auth: new auth_1.default(optionsWithDefaults),
        modelCustomizationService: new model_customization_from_api_1.default(forestAdminServerInterface, optionsWithDefaults),
    };
}
exports.default = buildApplicationServices;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQtYXBwbGljYXRpb24tc2VydmljZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvYnVpbGQtYXBwbGljYXRpb24tc2VydmljZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxrREFBaUM7QUFDakMsMkVBQWtEO0FBQ2xELGdGQUE4RDtBQUM5RCx3SUFBNEc7QUFFNUcsa0VBQWdEO0FBQ2hELHVIQUFtRztBQUVuRyx3RkFBc0U7QUFDdEUsZ0dBQW9FO0FBQ3BFLDhGQUE0RTtBQUM1RSxvRkFBa0U7QUFDbEUsc0RBQXFDO0FBTXJDLDRHQUFrRjtBQUNsRiw0RUFBbUQ7QUFFbkQsU0FBd0Isd0JBQXdCLENBQzlDLDBCQUFzRCxFQUN0RCxPQUFpQztJQWNqQyxNQUFNLG1CQUFtQixHQUFHO1FBQzFCLGVBQWUsRUFBRSw2QkFBNkI7UUFDOUMsaUNBQWlDLEVBQUUsRUFBRSxHQUFHLEVBQUU7UUFDMUMsTUFBTSxFQUFFLHdCQUFhO1FBQ3JCLG1CQUFtQixFQUFFLElBQUk7UUFDekIsR0FBRyxPQUFPO0tBQ1gsQ0FBQztJQUVGLE1BQU0sZUFBZSxHQUFHLElBQUkseUJBQXFCLENBQy9DLG1CQUFtQixFQUNuQiwwQkFBMEIsQ0FDM0IsQ0FBQztJQUVGLE1BQU0sbUJBQW1CLEdBQUcsSUFBSSw4QkFBMEIsQ0FDeEQsbUJBQW1CLEVBQ25CLGVBQWUsRUFDZiwwQkFBMEIsQ0FDM0IsQ0FBQztJQUVGLE1BQU0sZ0JBQWdCLEdBQUcsSUFBSSwyQkFBdUIsQ0FDbEQsbUJBQW1CLEVBQ25CLDBCQUEwQixDQUMzQixDQUFDO0lBRUYsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLHdDQUE0QixDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFFL0UsTUFBTSxVQUFVLEdBQUcsSUFBSSwrQkFBaUIsQ0FBQyxnQkFBZ0IsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO0lBRWhGLE1BQU0sYUFBYSxHQUFHLElBQUksK0NBQWlDLENBQ3pELGdCQUFnQixFQUNoQixlQUFlLEVBQ2YsbUJBQW1CLENBQ3BCLENBQUM7SUFFRixNQUFNLGtCQUFrQixHQUFHLElBQUksNkJBQXlCLENBQUMsbUJBQW1CLEVBQUUsYUFBYSxDQUFDLENBQUM7SUFFN0YsT0FBTztRQUNMLG1CQUFtQjtRQUNuQixtQkFBbUI7UUFDbkIsVUFBVTtRQUNWLGdCQUFnQjtRQUNoQixrQkFBa0I7UUFDbEIsYUFBYTtRQUNiLFlBQVksRUFBRSxJQUFJLHVCQUFZLENBQUMsZ0JBQWdCLENBQUM7UUFDaEQsV0FBVyxFQUFFLElBQUksc0JBQWtCLENBQUMsbUJBQW1CLENBQUM7UUFDeEQsTUFBTSxFQUFFLElBQUksZ0JBQWEsQ0FBQyxtQkFBbUIsQ0FBQztRQUM5QyxJQUFJLEVBQUUsSUFBSSxjQUFXLENBQUMsbUJBQW1CLENBQUM7UUFDMUMseUJBQXlCLEVBQUUsSUFBSSxzQ0FBZ0MsQ0FDN0QsMEJBQTBCLEVBQzFCLG1CQUFtQixDQUNwQjtLQUNGLENBQUM7QUFDSixDQUFDO0FBcEVELDJDQW9FQyJ9