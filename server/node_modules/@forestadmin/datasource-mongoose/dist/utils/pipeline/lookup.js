"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const schema_1 = __importDefault(require("../../mongoose/schema"));
/**
 * Transform a forest admin projection into a mongo pipeline that performs the lookups
 * and transformations to target them
 */
class LookupGenerator {
    static lookup(model, stack, projection) {
        const schemaStack = stack.reduce((acc, _, index) => {
            return [
                ...acc,
                schema_1.default.fromModel(model).applyStack(stack.slice(0, index + 1), true),
            ];
        }, [schema_1.default.fromModel(model)]);
        return this.lookupProjection(model.db.models, null, schemaStack.map(s => s.fields), projection);
    }
    static lookupProjection(models, currentPath, schemaStack, projection) {
        const pipeline = [];
        for (const [name, subProjection] of Object.entries(projection.relations))
            pipeline.push(...this.lookupRelation(models, currentPath, schemaStack, name, subProjection));
        return pipeline;
    }
    static lookupRelation(models, currentPath, schemaStack, name, subProjection) {
        const as = currentPath ? `${currentPath}.${name}` : name;
        const lastSchema = schemaStack[schemaStack.length - 1];
        const previousSchemas = schemaStack.slice(0, schemaStack.length - 1);
        // Native many to one relation
        if (name.endsWith('__manyToOne')) {
            const foreignKeyName = name.substring(0, name.length - '__manyToOne'.length);
            const model = models[lastSchema[foreignKeyName].options.ref];
            const from = model.collection.collectionName;
            const localField = currentPath ? `${currentPath}.${foreignKeyName}` : foreignKeyName;
            const foreignField = '_id';
            const subSchema = schema_1.default.fromModel(model).fields;
            return [
                // Push lookup to pipeline
                { $lookup: { from, localField, foreignField, as } },
                { $unwind: { path: `$${as}`, preserveNullAndEmptyArrays: true } },
                // Recurse to get relations of relations
                ...this.lookupProjection(models, as, [...schemaStack, subSchema], subProjection),
            ];
        }
        // Inverse of fake relation
        if (name === 'parent' && previousSchemas.length) {
            return this.lookupProjection(models, as, previousSchemas, subProjection);
        }
        // Fake relation
        if (lastSchema[name]) {
            return this.lookupProjection(models, as, [...schemaStack, lastSchema[name]], subProjection);
        }
        // We should have handled all possible cases.
        throw new Error(`Unexpected relation: '${name}'`);
    }
}
exports.default = LookupGenerator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9va3VwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL3BpcGVsaW5lL2xvb2t1cC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUdBLG1FQUFtRTtBQUduRTs7O0dBR0c7QUFDSCxNQUFxQixlQUFlO0lBQ2xDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBcUIsRUFBRSxLQUFZLEVBQUUsVUFBc0I7UUFDdkUsTUFBTSxXQUFXLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FDOUIsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQ2hCLE9BQU87Z0JBQ0wsR0FBRyxHQUFHO2dCQUNOLGdCQUFjLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxLQUFLLEdBQUcsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDO2FBQzVFLENBQUM7UUFDSixDQUFDLEVBQ0QsQ0FBQyxnQkFBYyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUNsQyxDQUFDO1FBRUYsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQzFCLEtBQUssQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUNmLElBQUksRUFDSixXQUFXLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUM5QixVQUFVLENBQ1gsQ0FBQztJQUNKLENBQUM7SUFFTyxNQUFNLENBQUMsZ0JBQWdCLENBQzdCLE1BQXNDLEVBQ3RDLFdBQW1CLEVBQ25CLFdBQXlCLEVBQ3pCLFVBQXNCO1FBRXRCLE1BQU0sUUFBUSxHQUFHLEVBQUUsQ0FBQztRQUVwQixLQUFLLE1BQU0sQ0FBQyxJQUFJLEVBQUUsYUFBYSxDQUFDLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDO1lBQ3RFLFFBQVEsQ0FBQyxJQUFJLENB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