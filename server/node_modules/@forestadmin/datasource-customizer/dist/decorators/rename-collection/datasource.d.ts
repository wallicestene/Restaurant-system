import { DataSource, DataSourceDecorator } from '@forestadmin/datasource-toolkit';
import RenameCollectionCollectionDecorator from './collection';
export default class RenameCollectionDataSourceDecorator extends DataSourceDecorator<RenameCollectionCollectionDecorator> {
    private fromChildName;
    private toChildName;
    constructor(childDataSource: DataSource);
    get collections(): RenameCollectionCollectionDecorator[];
    getCollection(name: string): RenameCollectionCollectionDecorator;
    /**
     * Helper to rename multiple collections at once.
     * Used by the addDataSource method in DataSourceCustomizer.
     */
    renameCollections(rename?: ((oldName: string) => string | null) | {
        [oldName: string]: string;
    }): void;
    /**
     * Rename a single collection
     * Used by the renameCollection method in DataSourceCustomizer.
     * @param currentName
     * @param newName
     */
    renameCollection(currentName: string, newName: string): void;
}
//# sourceMappingURL=datasource.d.ts.map